name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pylint pytest pytest-cov
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Node.js dependencies
      working-directory: ./frontend
      run: npm install
    
    - name: Run Python tests
      working-directory: ./backend
      run: pytest --cov
    
    - name: Run Python linting
      working-directory: ./backend
      run: pylint **/*.py
    
    - name: Run Frontend tests
      working-directory: ./frontend
      run: npm test
    
    - name: Run Frontend linting
      working-directory: ./frontend
      run: npm run lint

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Security scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
    - name: OWASP ZAP Scan
      uses: zaproxy/action-full-scan@v0.4.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        docker_name: 'owasp/zap2docker-stable'
        target: 'http://localhost:8000'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
